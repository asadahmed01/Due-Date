{"version":3,"sources":["components/taskList.jsx","components/input.jsx","App.js","reportWebVitals.js","index.js"],"names":["TaskList","tasks","onDelete","renderer","date","days","hours","minutes","seconds","completed","className","map","task","index","name","description","dueDate","onClick","Input","props","useState","time","setTask","items","setItems","hide","setHide","onSubmit","e","preventDefault","old","type","placeholder","onChange","currentTarget","value","prevState","target","disabled","id","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA2EeA,MAvEf,YAA8C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAEnBC,GAFqC,EAARC,KAElB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACxC,OADiE,EAAhBC,UAI7C,sBAAMC,UAAU,6BAAhB,6BAKA,uBAAMA,UAAU,+BAAhB,UACE,uBAAMA,UAAU,8DAAhB,UACG,SADH,IACcL,KAEd,uBAAMK,UAAU,6DAAhB,UACG,WACAJ,KAEH,uBAAMI,UAAU,6DAAhB,UACG,aACAH,KAEH,uBAAMG,UAAU,gDAAhB,UACG,aACAF,UAOX,OACE,qBAAKE,UAAU,iBAAf,SACE,6BACGT,EAAMU,KAAI,SAACC,EAAMC,GAAP,OACT,qBAEEH,UAAU,+HAFZ,UAIE,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,yCAAd,SACGE,EAAKE,OAGR,oBAAIJ,UAAU,gBAAd,SAA+BE,EAAKG,cACpC,oBAAIL,UAAU,kBAAd,SAAiCE,EAAKI,UACtC,oBAAIN,UAAU,gDAAd,mBAAkEE,EAAKE,KAAvE,kBAEA,cAAC,IAAD,CAAWV,KAAMQ,EAAKI,QAASb,SAAUA,OAG3C,sBAAKO,UAAU,8CAAf,UACE,wBACEO,QAAS,kBAAMf,EAASW,IACxBH,UAAU,kEAFZ,SAIE,cAAC,IAAD,MAGF,wBAAQA,UAAU,6DAAlB,SACE,cAAC,IAAD,WAxBCG,WCmEFK,MAxGf,SAAeC,GAAO,MAEIC,mBAAS,CAC/BN,KAAM,GACNC,YAAa,GACbC,QAAS,GACTK,KAAM,KANY,mBAEbT,EAFa,KAEPU,EAFO,OASMF,mBAAS,IATf,mBASbG,EATa,KASNC,EATM,OAUIJ,oBAAS,GAVb,mBAUbK,EAVa,KAUPC,EAVO,KAoDpB,OACE,sBAAKhB,UAAU,mBAAf,UACE,wBACEA,UAAU,6HACVO,QATY,WAEhB,OADAS,GAASD,GACFA,GAKL,SAIGA,EAAO,cAAC,IAAD,IAAa,cAAC,IAAD,MAEvB,qBAAKf,UAAWe,EAAO,SAAW,GAAlC,SACE,uBACEE,SAvBa,SAACC,GACpBA,EAAEC,iBAEFL,GAAS,SAACM,GAAD,OAAUlB,GAAV,mBAAmBkB,OAE5BR,EAAQ,CAAER,KAAM,GAAIC,YAAa,GAAIC,QAAS,MAmBxCN,UAAU,uCAFZ,UAIE,uBACEA,UAAU,0IACVqB,KAAK,OACLC,YAAY,YACZC,SAvDS,SAACL,GAClB,IAAMd,EAAOc,EAAEM,cAAcC,MAC7Bb,GAAQ,SAACc,GACP,OAAO,2BAAKA,GAAZ,IAAuBtB,aAqDjBqB,MAAOvB,EAAKE,KACZA,KAAK,aAGP,uBACEJ,UAAU,0IACVqB,KAAK,OACLC,YAAY,mBACZC,SAzDiB,SAACL,GAC1B,IAAMb,EAAca,EAAES,OAAOF,MAC7Bb,GAAQ,SAACc,GACP,OAAO,2BAAKA,GAAZ,IAAuBrB,oBAuDjBoB,MAAOvB,EAAKG,cAGd,uBACEL,UAAU,qIACVqB,KAAK,iBACLC,YAAY,WACZC,SA1DS,SAACL,GAClB,IAAMxB,EAAOwB,EAAES,OAAOF,MACtBb,GAAQ,SAACc,GACP,OAAO,2BAAKA,GAAZ,IAAuBpB,QAASZ,QAwD1B+B,MAAOvB,EAAKI,UAGd,wBACEN,UAAU,2HACV4B,UAAW1B,EAAKE,KAFlB,yBASJ,cAAC,EAAD,CAAUb,MAAOsB,EAAOrB,SAhEP,SAACqC,GACpBC,QAAQC,IAAIF,IA+DsCnC,KAAMQ,EAAKI,cC5FlD0B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20768112.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { FaPen, FaTrash } from \"react-icons/fa\";\r\n\r\nfunction TaskList({ tasks, onDelete, date }) {\r\n  ////  ////\r\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      // Render a completed state\r\n      return (\r\n        <span className=\"text-red-600 font-semibold\">Deadline Passed</span>\r\n      );\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <span className=\"font-semibold text-green-600\">\r\n          <span className=\"bg-blue-600 text-white p-1 rounded-lg text-xs md:mr-2 mt-2 \">\r\n            {\"Days: \"} {days}\r\n          </span>\r\n          <span className=\"bg-blue-600 text-white p-1 rounded-lg text-xs md:mr-2 mt-2\">\r\n            {\" Hours: \"}\r\n            {hours}\r\n          </span>\r\n          <span className=\"bg-blue-600 text-white p-1 rounded-lg text-xs md:mr-2 mt-2\">\r\n            {\" Minutes: \"}\r\n            {minutes}\r\n          </span>\r\n          <span className=\"bg-blue-600 text-white p-1 rounded-lg text-xs\">\r\n            {\" Seconds: \"}\r\n            {seconds}\r\n          </span>\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-5\">\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li\r\n            key={index}\r\n            className=\"border-l-8 border-blue-500 rounded-lg p-3 mt-5 bg-gray-100 w-11/12 md:w-1/2 flex place-items-center justify-between relative\"\r\n          >\r\n            <div className=\"mr-16 text-left text-xl\">\r\n              <h3 className=\"font-bold text-blue-900 pb-3 uppercase\">\r\n                {task.name}\r\n              </h3>\r\n\r\n              <h3 className=\"text-gray-800\">{task.description}</h3>\r\n              <h3 className=\"text-yellow-500\">{task.dueDate}</h3>\r\n              <h3 className=\"text-yellow-900 capitalize font-semibold my-3\">{`${task.name} is due in: `}</h3>\r\n\r\n              <Countdown date={task.dueDate} renderer={renderer} />\r\n            </div>\r\n\r\n            <div className=\"md:ml-16 md:mt-10 absolute bottom-0 right-5\">\r\n              <button\r\n                onClick={() => onDelete(index)}\r\n                className=\"md:mr-5 mb-5 text-red-500 hover:text-red-600 focus:outline-none\"\r\n              >\r\n                <FaTrash />\r\n              </button>\r\n\r\n              <button className=\" text-blue-700 hover:text-blue-500 focus:outline-none ml-5\">\r\n                <FaPen />\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { useState } from \"react\";\r\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\r\nimport TaskList from \"./taskList\";\r\n\r\nfunction Input(props) {\r\n  ////////          ///////////\r\n  const [task, setTask] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n    time: {},\r\n  });\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [hide, setHide] = useState(true);\r\n\r\n  //const interval = setInterval(() => setTime(calculateTimeLeft()), 1000);\r\n\r\n  const handleName = (e) => {\r\n    const name = e.currentTarget.value;\r\n    setTask((prevState) => {\r\n      return { ...prevState, name };\r\n    });\r\n  };\r\n\r\n  const handleDescriptioin = (e) => {\r\n    const description = e.target.value;\r\n    setTask((prevState) => {\r\n      return { ...prevState, description };\r\n    });\r\n  };\r\n\r\n  const handleDate = (e) => {\r\n    const date = e.target.value;\r\n    setTask((prevState) => {\r\n      return { ...prevState, dueDate: date };\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(id);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setItems((old) => [task, ...old]);\r\n\r\n    setTask({ name: \"\", description: \"\", dueDate: \"\" });\r\n  };\r\n\r\n  const showInput = () => {\r\n    setHide(!hide);\r\n    return hide;\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center mt-5\">\r\n      <button\r\n        className=\"text-3xl text-gray-500 border border-blue-500 rounded-3xl p-1 m-5 hover:bg-gray-200 hover:text-gray-600 focus:outline-none\"\r\n        onClick={showInput}\r\n      >\r\n        {hide ? <FaPlus /> : <FaMinus />}\r\n      </button>\r\n      <div className={hide ? \"hidden\" : \"\"}>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"md:flex md:justify-between mx-5 mt-5\"\r\n        >\r\n          <input\r\n            className=\"input border border-blue-500 focus:border-indigo-600 focus:outline-none text-black tracking-widest font-bold px-3 py-1 w-full mr-5 mt-5\"\r\n            type=\"text\"\r\n            placeholder=\"task name\"\r\n            onChange={handleName}\r\n            value={task.name}\r\n            name=\"taskname\"\r\n          />\r\n\r\n          <input\r\n            className=\"input border border-blue-500 focus:border-indigo-600 focus:outline-none text-black tracking-widest font-bold px-3 py-1 w-full mr-5 mt-5\"\r\n            type=\"text\"\r\n            placeholder=\"task description\"\r\n            onChange={handleDescriptioin}\r\n            value={task.description}\r\n          />\r\n\r\n          <input\r\n            className=\"input border border-blue-500 focus:border-indigo-600 focus:outline-none text-black tracking-widest font-bold px-1 py-1 w-full mt-5\"\r\n            type=\"datetime-local\"\r\n            placeholder=\"Due date\"\r\n            onChange={handleDate}\r\n            value={task.dueDate}\r\n          />\r\n\r\n          <button\r\n            className=\"h-10 px-5 m-2 text-white transition-colors duration-150 bg-blue-600 rounded-lg focus:outline-none hover:bg-blue-700 mt-5\"\r\n            disabled={!task.name}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <TaskList tasks={items} onDelete={handleDelete} date={task.dueDate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import \"./App.css\";\nimport Input from \"./components/input\";\n\nfunction App() {\n  return (\n    <div>\n      <Input />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./styles/main.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}